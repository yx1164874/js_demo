// 3.3.8[[Put]]
// 既然有可以获取属性值的[[Get]] 操作，就一定有对应的[[Put]] 操作。
// 你可能会认为给对象的属性赋值会触发[[Put]] 来设置或者创建这个属性。但是实际情况

// 并不完全是这样。
// [[Put]] 被触发时，实际的行为取决于许多因素，包括对象中是否已经存在这个属性（这
// 是最重要的因素）。
// 如果已经存在这个属性，[[Put]] 算法大致会检查下面这些内容。
// 1. 属性是否是访问描述符（参见 3.3.9 节）？如果是并且存在 setter 就调用 setter。
// 2. 属性的数据描述符中 writable 是否是 false ？如果是，在非严格模式下静默失败，在
// 严格模式下抛出 TypeError 异常。
// 3. 如果都不是，将该值设置为属性的值。
// 如果对象中不存在这个属性，[[Put]] 操作会更加复杂。我们会在第 5 章讨论[[Prototype]]
// 时详细进行介绍。